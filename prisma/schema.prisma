// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Blueprint {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  itemCreated       Item                @relation(fields: [itemCreatedId], references: [id])
  itemCreatedId     String              @db.ObjectId
  quantity          Int
  duration          Int                 @default(0)
  BlueprintMaterial BlueprintMaterial[]
}

model BlueprintMaterial {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  blueprint   Blueprint @relation(fields: [blueprintId], references: [id])
  blueprintId String    @db.ObjectId
  item        Item      @relation(fields: [itemId], references: [id])
  itemId      String    @db.ObjectId
  quantity    Int
}

model Character {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  Production Production[]
}

model Fit {
  id         String       @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  FitItem    FitItem[]
  StationFit StationFit[]
}

model FitItem {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  fit      Fit    @relation(fields: [fitId], references: [id])
  fitId    String @db.ObjectId
  item     Item   @relation(fields: [itemId], references: [id])
  itemId   String @db.ObjectId
  quantity Int
}

model Item {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  name              String
  FitItem           FitItem[]
  Production        Production[]
  Blueprint         Blueprint[]
  BlueprintMaterial BlueprintMaterial[]
  StationItem       StationItem[]
}

model Production {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  character   Character? @relation(fields: [characterId], references: [id])
  characterId String?    @db.ObjectId
  item        Item       @relation(fields: [itemId], references: [id])
  itemId      String     @db.ObjectId
  station     Station?   @relation(fields: [stationId], references: [id])
  stationId   String?    @db.ObjectId
}

model Station {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  StationFit  StationFit[]
  Production  Production[]
  StationItem StationItem[]
}

model StationFit {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  station   Station @relation(fields: [stationId], references: [id])
  stationId String  @db.ObjectId
  fit       Fit     @relation(fields: [fitId], references: [id])
  fitId     String  @db.ObjectId
  quantity  Int

  @@unique([stationId, fitId], name: "station_fit_unique")
}

model StationItem {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  station   Station @relation(fields: [stationId], references: [id])
  stationId String  @db.ObjectId
  item      Item    @relation(fields: [itemId], references: [id])
  itemId    String  @db.ObjectId
  quantity  Int
}
